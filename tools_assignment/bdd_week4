boolean a b c d
#
eval Y (!a + b&c)
#
eval F (a&b&c)+Y
eval Z1 a&!b + F
eval Z2 a&b&!d&F
#
eval Z1_fbar (!a&b)
eval Z2_f a&!b&d
#
eval diff1 Z1_fbar
eval diff2 !(Z2_f)
eval thing diff1&diff2
quantify u end thing d
satisfy end

{s3} = {s1} a0' a2' b2 + {s1} a2 b0' b2' + {s1}' a0' a1' a2 b1 + {s1}' a1 a2' b1' b2 + [4]' a0 b0 + [6] a0 b0 + a0' a1 b0' b2 + a0' a2 b0' b1
     {s2} = {s3} {s1}' a0 b0' + {s3}' [14] a0 + {s1} a2 b1' b2' + {s1}' a0' a2 b0 + [6] a0' b2' + [6] a2' b0' + a1' a2 b0 b1'
     {s1} = [4] a0 a1' b1 + [4] a1 b0 b1' + [4]' [6] + [4]' a0' a1' + [4]' b0' b1' + [5]' a0 b0' b1 + [5]' a0' a1 b0
     {s0} = {s3} {s2}' [4]' [6]' + {s3}' [5] [6] + [14] {s1} b1' + {s2} [4] a0 b0 + [5]' a0 b0
     [4] = a2' + b2'
     [5] = a2 + b2
     [6] = a1 b1
     [14] = a1' b2